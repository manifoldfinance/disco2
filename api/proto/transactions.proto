syntax = "proto3";

option go_package = "./transactions";

service Transactions {
    rpc RecordTransaction(TransactionInput) returns (Transaction);
    rpc GetTransaction(TransactionQuery) returns (Transaction);
    rpc ListTransactions(TransactionsQuery) returns (TransactionsList);
    rpc UpdateTransaction(UpdateTransactionRequest) returns (Transaction); // Added based on spec prompt
}

message Transaction {
    string id = 1;
    string account_id = 2;
    string card_id = 3; // optional
    int64 amount = 4; // amount in cents
    string currency = 5;
    string merchant_id = 6; // optional
    string merchant_name = 7; // optional
    string timestamp = 8; // ISO 8601 string or similar
    string status = 9; // e.g., "AUTHORIZED", "SETTLED", "REVERSED"
    string merchant_raw = 10; // raw merchant description
    string category = 11; // optional category
}

message TransactionInput {
    string account_id = 1;
    string card_id = 2; // optional
    int64 amount = 3; // amount in cents
    string currency = 4;
    string merchant_id = 5; // optional
    string merchant_raw = 6; // raw merchant description
    string status = 7; // initial status, e.g., "AUTHORIZED"
}

message TransactionQuery {
    string id = 1; // query by transaction ID
}

message TransactionsQuery {
    string account_id = 1; // query by account ID
    uint32 limit = 2; // pagination limit
    string before_id = 3; // pagination cursor (transaction ID)
}

message TransactionsList {
    repeated Transaction items = 1;
}

message UpdateTransactionRequest {
    string id = 1; // transaction ID to update
    string merchant_id = 2; // optional new merchant ID
    string merchant_name = 3; // optional new merchant name
    string category = 4; // optional new category
    string status = 5; // optional new status
}
