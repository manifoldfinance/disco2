// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/transactions.proto

package transactions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CardId        string                 `protobuf:"bytes,3,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"` // optional
	Amount        int64                  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`              // amount in cents
	Currency      string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	MerchantId    string                 `protobuf:"bytes,6,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`       // optional
	MerchantName  string                 `protobuf:"bytes,7,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"` // optional
	Timestamp     string                 `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                           // ISO 8601 string or similar
	Status        string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`                                 // e.g., "AUTHORIZED", "SETTLED", "REVERSED"
	MerchantRaw   string                 `protobuf:"bytes,10,opt,name=merchant_raw,json=merchantRaw,proto3" json:"merchant_raw,omitempty"`   // raw merchant description
	Category      string                 `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`                            // optional category
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_proto_transactions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transactions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_proto_transactions_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Transaction) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *Transaction) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Transaction) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *Transaction) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *Transaction) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Transaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transaction) GetMerchantRaw() string {
	if x != nil {
		return x.MerchantRaw
	}
	return ""
}

func (x *Transaction) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type TransactionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CardId        string                 `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"` // optional
	Amount        int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`              // amount in cents
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	MerchantId    string                 `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`    // optional
	MerchantRaw   string                 `protobuf:"bytes,6,opt,name=merchant_raw,json=merchantRaw,proto3" json:"merchant_raw,omitempty"` // raw merchant description
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`                              // initial status, e.g., "AUTHORIZED"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInput) Reset() {
	*x = TransactionInput{}
	mi := &file_proto_transactions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInput) ProtoMessage() {}

func (x *TransactionInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transactions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInput.ProtoReflect.Descriptor instead.
func (*TransactionInput) Descriptor() ([]byte, []int) {
	return file_proto_transactions_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionInput) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TransactionInput) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *TransactionInput) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionInput) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransactionInput) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *TransactionInput) GetMerchantRaw() string {
	if x != nil {
		return x.MerchantRaw
	}
	return ""
}

func (x *TransactionInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TransactionQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // query by transaction ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionQuery) Reset() {
	*x = TransactionQuery{}
	mi := &file_proto_transactions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionQuery) ProtoMessage() {}

func (x *TransactionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transactions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionQuery.ProtoReflect.Descriptor instead.
func (*TransactionQuery) Descriptor() ([]byte, []int) {
	return file_proto_transactions_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionQuery) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TransactionsQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // query by account ID
	Limit         uint32                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                         // pagination limit
	BeforeId      string                 `protobuf:"bytes,3,opt,name=before_id,json=beforeId,proto3" json:"before_id,omitempty"`    // pagination cursor (transaction ID)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionsQuery) Reset() {
	*x = TransactionsQuery{}
	mi := &file_proto_transactions_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsQuery) ProtoMessage() {}

func (x *TransactionsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transactions_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsQuery.ProtoReflect.Descriptor instead.
func (*TransactionsQuery) Descriptor() ([]byte, []int) {
	return file_proto_transactions_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionsQuery) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TransactionsQuery) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TransactionsQuery) GetBeforeId() string {
	if x != nil {
		return x.BeforeId
	}
	return ""
}

type TransactionsList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Transaction         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionsList) Reset() {
	*x = TransactionsList{}
	mi := &file_proto_transactions_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsList) ProtoMessage() {}

func (x *TransactionsList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transactions_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsList.ProtoReflect.Descriptor instead.
func (*TransactionsList) Descriptor() ([]byte, []int) {
	return file_proto_transactions_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionsList) GetItems() []*Transaction {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // transaction ID to update
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`       // optional new merchant ID
	MerchantName  string                 `protobuf:"bytes,3,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"` // optional new merchant name
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`                             // optional new category
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                 // optional new status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTransactionRequest) Reset() {
	*x = UpdateTransactionRequest{}
	mi := &file_proto_transactions_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionRequest) ProtoMessage() {}

func (x *UpdateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transactions_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionRequest.ProtoReflect.Descriptor instead.
func (*UpdateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_transactions_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTransactionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTransactionRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateTransactionRequest) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *UpdateTransactionRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateTransactionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_transactions_proto protoreflect.FileDescriptor

const file_proto_transactions_proto_rawDesc = "" +
	"\n" +
	"\x18proto/transactions.proto\"\xc4\x02\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\acard_id\x18\x03 \x01(\tR\x06cardId\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x03R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x1f\n" +
	"\vmerchant_id\x18\x06 \x01(\tR\n" +
	"merchantId\x12#\n" +
	"\rmerchant_name\x18\a \x01(\tR\fmerchantName\x12\x1c\n" +
	"\ttimestamp\x18\b \x01(\tR\ttimestamp\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x12!\n" +
	"\fmerchant_raw\x18\n" +
	" \x01(\tR\vmerchantRaw\x12\x1a\n" +
	"\bcategory\x18\v \x01(\tR\bcategory\"\xda\x01\n" +
	"\x10TransactionInput\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x17\n" +
	"\acard_id\x18\x02 \x01(\tR\x06cardId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12\x1f\n" +
	"\vmerchant_id\x18\x05 \x01(\tR\n" +
	"merchantId\x12!\n" +
	"\fmerchant_raw\x18\x06 \x01(\tR\vmerchantRaw\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\"\"\n" +
	"\x10TransactionQuery\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"e\n" +
	"\x11TransactionsQuery\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x1b\n" +
	"\tbefore_id\x18\x03 \x01(\tR\bbeforeId\"6\n" +
	"\x10TransactionsList\x12\"\n" +
	"\x05items\x18\x01 \x03(\v2\f.TransactionR\x05items\"\xa4\x01\n" +
	"\x18UpdateTransactionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x12#\n" +
	"\rmerchant_name\x18\x03 \x01(\tR\fmerchantName\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status2\xf0\x01\n" +
	"\fTransactions\x124\n" +
	"\x11RecordTransaction\x12\x11.TransactionInput\x1a\f.Transaction\x121\n" +
	"\x0eGetTransaction\x12\x11.TransactionQuery\x1a\f.Transaction\x129\n" +
	"\x10ListTransactions\x12\x12.TransactionsQuery\x1a\x11.TransactionsList\x12<\n" +
	"\x11UpdateTransaction\x12\x19.UpdateTransactionRequest\x1a\f.TransactionB\x10Z\x0e./transactionsb\x06proto3"

var (
	file_proto_transactions_proto_rawDescOnce sync.Once
	file_proto_transactions_proto_rawDescData []byte
)

func file_proto_transactions_proto_rawDescGZIP() []byte {
	file_proto_transactions_proto_rawDescOnce.Do(func() {
		file_proto_transactions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_transactions_proto_rawDesc), len(file_proto_transactions_proto_rawDesc)))
	})
	return file_proto_transactions_proto_rawDescData
}

var file_proto_transactions_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_transactions_proto_goTypes = []any{
	(*Transaction)(nil),              // 0: Transaction
	(*TransactionInput)(nil),         // 1: TransactionInput
	(*TransactionQuery)(nil),         // 2: TransactionQuery
	(*TransactionsQuery)(nil),        // 3: TransactionsQuery
	(*TransactionsList)(nil),         // 4: TransactionsList
	(*UpdateTransactionRequest)(nil), // 5: UpdateTransactionRequest
}
var file_proto_transactions_proto_depIdxs = []int32{
	0, // 0: TransactionsList.items:type_name -> Transaction
	1, // 1: Transactions.RecordTransaction:input_type -> TransactionInput
	2, // 2: Transactions.GetTransaction:input_type -> TransactionQuery
	3, // 3: Transactions.ListTransactions:input_type -> TransactionsQuery
	5, // 4: Transactions.UpdateTransaction:input_type -> UpdateTransactionRequest
	0, // 5: Transactions.RecordTransaction:output_type -> Transaction
	0, // 6: Transactions.GetTransaction:output_type -> Transaction
	4, // 7: Transactions.ListTransactions:output_type -> TransactionsList
	0, // 8: Transactions.UpdateTransaction:output_type -> Transaction
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_transactions_proto_init() }
func file_proto_transactions_proto_init() {
	if File_proto_transactions_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_transactions_proto_rawDesc), len(file_proto_transactions_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_transactions_proto_goTypes,
		DependencyIndexes: file_proto_transactions_proto_depIdxs,
		MessageInfos:      file_proto_transactions_proto_msgTypes,
	}.Build()
	File_proto_transactions_proto = out.File
	file_proto_transactions_proto_goTypes = nil
	file_proto_transactions_proto_depIdxs = nil
}
